{"version":3,"sources":["types.js","store.js","reducers/productsReducer.js","reducers/cartReducer.js","reducers/orderReducer.js","components/Filter.js","actions/productActions.js","utils.js","components/Products.js","actions/cartActions.js","components/Cart.js","actions/orderActions.js","pages/MainPage.js","components/Orders.js","pages/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_PRODUCTS","FILTER_PRODUCTS_BY_SIZE","ORDER_PRODUCTS_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","CLEAR_CART","FETCH_ORDERS","DELETE_ORDER","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","products","state","action","type","items","payload","filteredItems","size","sort","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","id","applyMiddleware","thunk","Filter","this","props","filteredProducts","className","length","value","onChange","e","sortProducts","target","filterProducts","Component","connect","dispatch","filter","x","availableSizes","indexOf","sortedProducts","slice","a","b","_id","price","formatCurrency","num","Number","toFixed","toLocaleString","Products","openModal","product","setState","closeModal","fetchProducts","bottom","cascade","map","href","onClick","src","image","alt","title","addToCart","isOpen","onRequestClose","description","fetch","res","json","data","getState","alreadyExists","forEach","count","push","setItem","stringify","Cart","handleInput","event","name","createOrder","preventDefault","email","address","total","reduce","c","isChecked","isSent","clearOrder","showCheckout","createdAt","left","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","MainPage","Orders","fetchOrders","deleteOrder","AdminPage","App","to","path","exact","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f57718d8.chunk.js","sourcesContent":["export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\"\r\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\"\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\"\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\"\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\"\r\n\r\nexport const CREATE_ORDER = \"CREATE_ORDER\"\r\nexport const CLEAR_ORDER = \"CLEAR_ORDER\"\r\nexport const CLEAR_CART = \"CLEAR_CART\"\r\n\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\"\r\nexport const DELETE_ORDER = \"DELETE_ORDER\"\r\n","import {createStore, applyMiddleware, compose, combineReducers} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { cartReducer } from \"./reducers/cartReducer\"\r\nimport { orderReducer } from \"./reducers/orderReducer\"\r\nimport { productsReducer } from \"./reducers/productsReducer\"\r\n\r\nconst initialState = {}\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer\r\n}),\r\ninitialState,\r\ncomposeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import  { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\r\n\r\nexport const productsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_PRODUCTS: \r\n            return { items: action.payload,\r\n                     filteredItems: action.payload       \r\n            }\r\n        \r\n        case FILTER_PRODUCTS_BY_SIZE:\r\n            return{\r\n                ...state,\r\n                size: action.payload.size,\r\n                filteredItems: action.payload.items\r\n            }\r\n        \r\n        case ORDER_PRODUCTS_BY_PRICE:\r\n            return {\r\n                ...state,\r\n                sort: action.payload.sort,\r\n                filteredItems: action.payload.items\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from \"../types\"\r\n\r\n\r\nexport const cartReducer = (state = {cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\")}, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART: \r\n            return { cartItems: action.payload.cartItems }\r\n        case REMOVE_FROM_CART:\r\n            return { cartItems: action.payload.cartItems }\r\n        case CLEAR_CART:\r\n            return { cartItems: []}\r\n        default:\r\n            return state\r\n    }\r\n}","import { CLEAR_ORDER, CREATE_ORDER, DELETE_ORDER, FETCH_ORDERS } from \"../types\"\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER:\r\n            return { order: action.payload }\r\n        case CLEAR_ORDER:\r\n            return { order: null }\r\n        case FETCH_ORDERS:\r\n            return { orders: action.payload}\r\n        case DELETE_ORDER:\r\n            return { id: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport React, { Component } from 'react'\r\nimport {filterProducts, sortProducts} from '../actions/productActions'\r\n\r\nclass Filter extends Component {\r\n  \r\n    \r\n    render() {\r\n        return (\r\n            !this.props.filteredProducts ? (\r\n                <div>Loading...</div>\r\n            ) : \r\n(            <div className=\"filter\">\r\n                <div className=\"filter-result\">{this.props.filteredProducts.length} Products</div>\r\n                <div className=\"filter-sort\">\r\n                    Order {\" \"} \r\n                    <select value={this.props.sort} onChange={e=>this.props.sortProducts(this.props.filteredProducts, e.target.value)} >\r\n                        <option value=\"latest\" >Latest</option>\r\n                        <option value=\"lowest\">Lowest</option>\r\n                        <option value=\"highest\">Highest</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"filter-size\">\r\n                    Filter  {\" \"} \r\n                    <select value={this.props.size} onChange={e=>this.props.filterProducts(this.props.products, e.target.value)}>\r\n                        <option value=\"\">ALL</option>\r\n                        <option value=\"XS\">XS</option>\r\n                        <option value=\"S\">S</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"L\">L</option>\r\n                        <option value=\"XL\">XL</option>\r\n                        <option value=\"XXL\">XXL</option>\r\n                    </select>\r\n                </div>\r\n            </div>)\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    size: state.products.size,\r\n    sort: state.products.sort,\r\n    products: state.products.items,\r\n    filteredProducts: state.products.filteredItems\r\n}), {\r\n    filterProducts,\r\n    sortProducts\r\n})(Filter)","import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\"\r\n\r\nexport const fetchProducts = () => async (dispatch) => {\r\n    const res = await fetch(\"/api/products\")\r\n    const data = await res.json()\r\n    dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const filterProducts = (products, size) => (dispatch) => {\r\n    dispatch({\r\n        type: FILTER_PRODUCTS_BY_SIZE,\r\n        payload: {\r\n            size: size,\r\n            items: size === \"\"? products :\r\n            products.filter(x=>x.availableSizes.indexOf(size)>=0)\r\n        }\r\n    })\r\n}\r\n\r\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\r\n    const sortedProducts = filteredProducts.slice()\r\n    if(sort===\"latest\") {\r\n        sortedProducts.sort((a,b) => (a._id > b._id ? 1 : -1))\r\n    } else {\r\n        sortedProducts.sort((a,b) => (\r\n            sort === \"lowest\"? a.price > b.price? 1: -1\r\n            :\r\n            a.price > b.price? -1: 1\r\n        ))\r\n    }\r\n    dispatch({\r\n        type: ORDER_PRODUCTS_BY_PRICE,\r\n        payload: {\r\n            sort: sort,\r\n            items: sortedProducts\r\n        }\r\n    })\r\n}","export default function formatCurrency(num) {\r\n    return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \"\r\n}","import React, { Component } from 'react'\r\nimport formatCurrency from '../utils'\r\nimport Fade from 'react-reveal/Fade'\r\nimport Modal from 'react-modal'\r\nimport Zoom from 'react-reveal/Zoom'\r\nimport { connect } from 'react-redux'\r\nimport {fetchProducts} from '../actions/productActions'\r\nimport {addToCart} from '../actions/cartActions'\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            product: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchProducts()\r\n    }\r\n\r\n    openModal = product => {\r\n        this.setState({product})\r\n    }\r\n    closeModal = () => {\r\n        this.setState({product: null})\r\n    }\r\n\r\n    render() {\r\n        const {product} = this.state\r\n        return (\r\n            <div>\r\n                <Fade bottom cascade>\r\n                    {!this.props.products ? <div>Loading...</div> \r\n                    : (                    <ul className=\"products\">\r\n                        {this.props.products.map(product => (\r\n                            <li key={product._id}>\r\n                                <div className=\"product\">\r\n                                    <a href={\"#\" + product._id} onClick={()=>this.openModal(product)}  >\r\n                                        <img src={product.image} alt={product.title}></img>\r\n                                        <p>\r\n                                            {product.title}\r\n                                        </p>\r\n                                    </a>\r\n                                    <div className=\"product-price\">\r\n                                        <div>\r\n                                            {formatCurrency(product.price) }\r\n                                        </div>\r\n                                        <button onClick={()=>this.props.addToCart(product)} className=\"button primary\">\r\n                                            Add To Cart\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>)\r\n                    }\r\n                </Fade>\r\n                {\r\n                    product && (\r\n                        <Modal isOpen={true} onRequestClose={this.closeModal} >\r\n                            <Zoom>\r\n                            <button className=\"close-modal\" onClick={this.closeModal}>x</button>\r\n                            <div className=\"product-details\">\r\n                                <img src={product.image} alt={product.title}/>\r\n                                <div className=\"product-details-description\">\r\n                                    <p><strong> {product.title} </strong></p>\r\n                                    <p>{product.description}</p>\r\n                                    <p>\r\n                                        Available sizes {\" \"}\r\n                                        {product.availableSizes.map((x) => (\r\n                                            <span>\r\n                                                {\" \"}\r\n                                                <button className=\"button\">{x}</button>\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                    <div className=\"product-price\">\r\n                                        <div>{formatCurrency(product.price)}</div>\r\n                                        <button className=\"button primary\" onClick={() => {\r\n                                            this.props.addToCart(product)\r\n                                            this.closeModal()\r\n                                        }}>Add to cart</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            </Zoom>\r\n                        </Modal>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state=> ({products: state.products.filteredItems}), \r\n    {\r\n        fetchProducts,\r\n        addToCart\r\n    })\r\n    (Products)\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\"\r\n\r\nexport const addToCart = (product) => (dispatch, getState) => {\r\n    const cartItems = getState().cart.cartItems.slice();\r\n    let alreadyExists = false\r\n    cartItems.forEach(x=>{\r\n        if (x._id === product._id) {\r\n            alreadyExists = true\r\n            x.count++\r\n        }\r\n    })\r\n    if(!alreadyExists) {\r\n        cartItems.push({\r\n            ...product,\r\n            count: 1\r\n        })\r\n    }\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: { cartItems }\r\n    })\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\r\n}\r\n\r\nexport const removeFromCart = (product) => (dispatch, getState) => {\r\n    const cartItems =  getState().cart.cartItems.slice().filter(\r\n        x => x._id !== product._id\r\n    )\r\n    dispatch ({\r\n        type: REMOVE_FROM_CART,\r\n        payload: { cartItems }\r\n    })\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\r\n} ","import React, { Component } from 'react'\r\nimport formatCurrency from '../utils'\r\nimport Fade from 'react-reveal/Fade'\r\nimport Zoom from 'react-reveal/Zoom'\r\nimport Modal from 'react-modal'\r\nimport { connect } from 'react-redux'\r\nimport { removeFromCart } from '../actions/cartActions'\r\nimport { createOrder, clearOrder } from '../actions/orderActions'\r\n\r\nclass Cart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showCheckout: false,\r\n            name: \"\",\r\n            email: \"\",\r\n            address: \"\"\r\n        }\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    createOrder = (e) => {\r\n        e.preventDefault();\r\n        const order = {\r\n          name: this.state.name,\r\n          email: this.state.email,\r\n          address: this.state.address,\r\n          cartItems: this.props.cartItems,\r\n          total: this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0),\r\n          isChecked: false,\r\n          isSent: false,\r\n        };\r\n        this.props.createOrder(order);\r\n      }\r\n    closeModal = () => {\r\n        this.props.clearOrder()\r\n    }\r\n    render() {\r\n        const {cartItems, order } = this.props\r\n        return (\r\n            <div>\r\n                {cartItems.length === 0? \r\n                    <div className=\"cart cart-header\">Cart is empty</div>\r\n                    : (<div className=\"cart cart-header\">You have {cartItems.length} in the cart{\" \"}</div>)}\r\n                {order && <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                    <Zoom>\r\n                        <button className=\"close-modal\" onClick={this.closeModal}>x</button>\r\n                        <div className=\"order-details\">\r\n                            <h3 className=\"success-message\">Your order has been placed</h3>\r\n                            <h2>Order {order._id} </h2>\r\n                            <ul>\r\n                                <li>\r\n                                    <div>Name:</div>\r\n                                    <div>{order.name}</div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>Email:</div>\r\n                                    <div>{order.email}</div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>Address:</div>\r\n                                    <div>{order.address}</div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>Date:</div>\r\n                                    <div>{order.createdAt}</div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>Total:</div>\r\n                                    <div>{formatCurrency(order.total)}</div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>Cart items:</div>\r\n                                    <div>{order.cartItems.map(x=>(\r\n                                        <div>\r\n                                            {x.count} {\" x \"} {x.title}\r\n                                        </div>\r\n                                    ))}</div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Zoom>\r\n                </Modal>}\r\n                <div>\r\n                    <div className=\"cart\">\r\n                        <Fade left cascade>\r\n                            <ul className=\"cart-items\">\r\n                                {cartItems.map(item=>(<li key={item._id}>\r\n                                    <div>\r\n                                        <img src={item.image} alt={item.title}></img>\r\n                                    </div>\r\n                                    <div>{item.title}</div>\r\n                                    <div className=\"right\">  \r\n                                        {formatCurrency(item.price)} x {item.count} {\" \"}\r\n                                        <button className=\"button\" onClick={()=>this.props.removeFromCart(item)}>Remove</button>\r\n                                    </div>\r\n                                </li> ))}\r\n                            </ul>\r\n                        </Fade>\r\n                    </div>\r\n                    {cartItems.length !==0 && (\r\n                        <div>\r\n                            <div className=\"cart\">\r\n                                <div className=\"total\">\r\n                                    <div> Total: {\" \"}\r\n                                        {formatCurrency(cartItems.reduce((a, c) => a + (c.price*c.count), 0)) } \r\n                                    </div>\r\n                                    <button onClick={()=>{this.setState({ showCheckout: true})}} className=\"button primary\">Proceed</button>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.showCheckout && (\r\n                                <Fade right cascade>\r\n                                    <div className=\"cart\">\r\n                                        <form onSubmit={this.createOrder}>\r\n                                            <ul className=\"form-container\">\r\n                                                <li>\r\n                                                    <label>Email</label>\r\n                                                    <input name=\"email\" type=\"email\" required onChange={this.handleInput}/>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Name</label>\r\n                                                    <input name=\"name\" type=\"text\" required onChange={this.handleInput}/>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Address</label>\r\n                                                    <input name=\"address\" type=\"text\" required onChange={this.handleInput}/>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <button className=\"button primary\" type=\"submit\">Checkout</button>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </form>\r\n                                    </div>\r\n                                </Fade>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  connect((state) => ({\r\n    order: state.order.order,\r\n    cartItems: state.cart.cartItems,    \r\n}),\r\n{\r\n    removeFromCart,\r\n    createOrder, \r\n    clearOrder\r\n}\r\n)(Cart)","import { CREATE_ORDER, CLEAR_ORDER, CLEAR_CART, FETCH_ORDERS, DELETE_ORDER } from \"../types\"\r\n\r\nexport const createOrder = (order) => dispatch => {\r\n    fetch(\"api/orders\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(order)\r\n    })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            dispatch({ type: CREATE_ORDER, payload: data})\r\n            localStorage.clear(\"cartItems\")\r\n            dispatch({ type: CLEAR_CART})\r\n        })\r\n}\r\n\r\nexport const clearOrder = () => dispatch => {\r\n    dispatch({ type: CLEAR_ORDER })\r\n}\r\n\r\nexport const fetchOrders = () => async dispatch => {\r\n    const res = await fetch(\"api/orders\")\r\n    const data = await res.json()\r\n    dispatch({\r\n        type: FETCH_ORDERS,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const deleteOrder = (id) => async dispatch => {\r\n    const res = await fetch(\"/api/orders/\"+id, {method:\"DELETE\"})\r\n    const data = await res.json()\r\n    dispatch({\r\n        type: DELETE_ORDER,\r\n        payload: data\r\n    })   \r\n}","import React from \"react\";\r\nimport Filter from \"../components/Filter\";\r\nimport Products from \"../components/Products\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nexport function MainPage() {\r\n    return (\r\n        <>\r\n            <div className=\"main\">\r\n              <Filter/>\r\n              <Products />\r\n            </div>\r\n            <div className=\"sidebar\">\r\n              <Cart />\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {fetchOrders, deleteOrder} from '../actions/orderActions'\r\nimport formatCurrency from '../utils'\r\n\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchOrders()\r\n    }\r\n    render() {\r\n        const {orders} = this.props\r\n        return !orders ? (<div>There are no order yet</div>) :\r\n        (\r\n            <div className=\"orders\">\r\n            <h2>Orders</h2>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>NAME</th>\r\n                  <th>EMAIL</th>\r\n                  <th>ADDRESS</th>\r\n                  <th>ITEMS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}> \r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt}</td>\r\n                    <td> {formatCurrency(order.total)}</td>\r\n                    <td>{order.name}</td>\r\n                    <td>{order.email}</td>\r\n                    <td>{order.address}</td>\r\n                    <td>\r\n                      {order.cartItems.map((item) => (\r\n                        <div key={item._id}>\r\n                          {item.count} {\" x \"} {item.title}\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                    <td><i className=\"material-icons\" onClick={e=>{this.props.deleteOrder(order._id); this.props.fetchOrders()}} >delete</i></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(state => ({orders: state.order.orders}), {fetchOrders, deleteOrder})(Orders)\r\n\r\n\r\n","import React from 'react'\r\nimport Orders from '../components/Orders'\r\n\r\nexport function AdminPage() {\r\n    return (\r\n        <div>\r\n            <Orders />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { MainPage } from \"./pages/MainPage\";\r\nimport { AdminPage } from \"./pages/AdminPage\";\r\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\"\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"grid-container\">\r\n            <header>\r\n              <Link to =\"/\">React Shopping Cart</Link>\r\n              <Link to =\"/admin\">admin</Link>\r\n            </header>\r\n            <main>\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/\" exact><MainPage /></Route>\r\n                  <Route path=\"/admin\"><AdminPage /></Route>\r\n                </Switch>\r\n              </div>\r\n            </main>\r\n            <footer>All rights reserved</footer>\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}